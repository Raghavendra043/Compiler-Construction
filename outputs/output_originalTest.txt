Line 5  Token 1  < Keyword   int >
Line 5  Token 10  < Identifier   fact >
Line 5  Token 34  < Delimiter   ( >
Line 5  Token 1  < Keyword   int >
Line 5  Token 10  < Identifier   n >
Line 5  Token 35  < Delimiter   ) >
Line 5  Token 30  < Delimiter   { >
Line 6  Token 10  < Identifier   if >
Line 6  Token 34  < Delimiter   ( >
Line 6  Token 10  < Identifier   n >
Line 6  Token 24  < Operator   <= >
Line 6  Token 28  < Integer   1 >
Line 6  Token 35  < Delimiter   ) >
Line 7  Token 10  < Identifier   return >
Line 7  Token 28  < Integer   1 >
Line 7  Token 36  < Delimiter   ; >
Line 8  Token 10  < Identifier   else >
Line 9  Token 10  < Identifier   return >
Line 9  Token 10  < Identifier   n >
Line 9  Token 13  < Operator   * >
Line 9  Token 10  < Identifier   fact >
Line 9  Token 34  < Delimiter   ( >
Line 9  Token 10  < Identifier   n >
Line 9  Token 12  < Operator   - >
Line 9  Token 28  < Integer   1 >
Line 9  Token 35  < Delimiter   ) >
Line 9  Token 36  < Delimiter   ; >
Line 10  Token 31  < Delimiter   } >
Line 11  Token 10  < Identifier   void >
Line 11  Token 10  < Identifier   main >
Line 11  Token 34  < Delimiter   ( >
Line 11  Token 10  < Identifier   void >
Line 11  Token 35  < Delimiter   ) >
Line 11  Token 30  < Delimiter   { >
Line 12  Token 1  < Keyword   int >
Line 12  Token 10  < Identifier   x >
Line 12  Token 36  < Delimiter   ; >
Line 13  Token 10  < Identifier   x >
--Error at Line 13:
	= 1;
Line 14  Token 5  < Keyword   while >
Line 14  Token 34  < Delimiter   ( >
Line 14  Token 10  < Identifier   x >
Line 14  Token 24  < Operator   <= >
Line 14  Token 28  < Integer   10 >
Line 14  Token 35  < Delimiter   ) >
Line 14  Token 30  < Delimiter   { >
Line 15  Token 10  < Identifier   write >
Line 15  Token 34  < Delimiter   ( >
Line 15  Token 10  < Identifier   x >
Line 15  Token 35  < Delimiter   ) >
Line 15  Token 36  < Delimiter   ; >
Line 16  Token 10  < Identifier   write >
Line 16  Token 34  < Delimiter   ( >
Line 16  Token 10  < Identifier   fact >
Line 16  Token 34  < Delimiter   ( >
Line 16  Token 10  < Identifier   x >
Line 16  Token 35  < Delimiter   ) >
Line 16  Token 35  < Delimiter   ) >
Line 16  Token 36  < Delimiter   ; >
Line 17  Token 10  < Identifier   writeln >
Line 17  Token 34  < Delimiter   ( >
Line 17  Token 35  < Delimiter   ) >
Line 17  Token 36  < Delimiter   ; >
Line 18  Token 10  < Identifier   x >
--Error at Line 18:
	= x + 1;
Line 19  Token 31  < Delimiter   } >
Line 20  Token 31  < Delimiter   } >
