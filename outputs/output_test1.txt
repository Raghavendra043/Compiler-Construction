Line 4  Token 1  < Keyword   int >
Line 4  Token 10  < Identifier   main >
Line 4  Token 34  < Delimiter   ( >
Line 4  Token 35  < Delimiter   ) >
Line 4  Token 30  < Delimiter   { >
Line 5  Token 1  < Keyword   int >
Line 5  Token 10  < Identifier   i >
Line 5  Token 21  < Operator   := >
Line 5  Token 28  < Integer   32 >
Line 5  Token 36  < Delimiter   ; >
Line 6  Token 2  < Keyword   float >
Line 6  Token 10  < Identifier   f >
Line 6  Token 21  < Operator   := >
Line 6  Token 29  < Floating Point   3.5 >
Line 6  Token 36  < Delimiter   ; >
Line 7  Token 4  < Keyword   string >
Line 7  Token 10  < Identifier   str >
Line 7  Token 21  < Operator   := >
Line 7  Token 38  < String Literal   "Hello World\n" >
Line 7  Token 36  < Delimiter   ; >
Line 8  Token 10  < Identifier   if >
Line 8  Token 34  < Delimiter   ( >
Line 8  Token 10  < Identifier   i >
Line 8  Token 22  < Operator   == >
Line 8  Token 28  < Integer   32 >
Line 8  Token 35  < Delimiter   ) >
Line 8  Token 30  < Delimiter   { >
Line 9  Token 10  < Identifier   j >
Line 9  Token 21  < Operator   := >
Line 9  Token 28  < Integer   3 >
Line 9  Token 11  < Operator   + >
Line 9  Token 28  < Integer   2 >
Line 9  Token 36  < Delimiter   ; >
Line 10  Token 31  < Delimiter   } >
Line 14  Token 5  < Keyword   while >
Line 14  Token 34  < Delimiter   ( >
Line 14  Token 8  < Keyword   true >
Line 14  Token 35  < Delimiter   ) >
Line 14  Token 30  < Delimiter   { >
Line 15  Token 10  < Identifier   f >
Line 15  Token 21  < Operator   := >
Line 15  Token 10  < Identifier   f >
Line 15  Token 12  < Operator   - >
Line 15  Token 29  < Floating Point   1.2 >
Line 15  Token 36  < Delimiter   ; >
Line 16  Token 31  < Delimiter   } >
Line 17  Token 10  < Identifier   return >
Line 17  Token 28  < Integer   1 >
Line 17  Token 36  < Delimiter   ; >
Line 18  Token 31  < Delimiter   } >
